---
- name: Ensure all VMs in canon-test namespace have cusa network and interface
  hosts: localhost
  gather_facts: no
  vars:
    vm_namespaces:
      - canon-test

  tasks:
    - name: Get all VMs in each namespace
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        namespace: "{{ ns }}"
      loop: "{{ vm_namespaces }}"
      loop_control:
        loop_var: ns
        label: "{{ ns }}"
      register: all_vms

    - name: Set fact with all VMs across namespaces
      set_fact:
        vms: "{{ query('subelements', all_vms.results, 'resources', skip_missing=True) }}"

    - name: Add cusa network+interface if missing
      loop: "{{ vms }}"
      loop_control:
        label: "{{ item.1.metadata.name }} (ns: {{ item.0.ns }})"
      vars:
        existing_networks: "{{ item.1.spec.template.spec.networks | default([]) }}"
        existing_interfaces: "{{ item.1.spec.template.spec.domain.devices.interfaces | default([]) }}"
        updated_networks: >-
          {{ existing_networks + [{'name': 'cusa', 'multus': {'networkName': 'cusa-canon'}}]
             if 'cusa' not in (existing_networks | map(attribute='name') | list)
             else existing_networks }}
        updated_interfaces: >-
          {{ existing_interfaces + [{'name': 'cusa', 'bridge': {}}]
             if 'cusa' not in (existing_interfaces | map(attribute='name') | list)
             else existing_interfaces }}
      when: >
        'cusa' not in (existing_networks | map(attribute='name') | list)
        or 'cusa' not in (existing_interfaces | map(attribute='name') | list)
      kubernetes.core.k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ item.1.metadata.name }}"
        namespace: "{{ item.0.ns }}"
        merge_type: merge
        definition:
          spec:
            template:
              spec:
                networks: "{{ updated_networks }}"
                domain:
                  devices:
                    interfaces: "{{ updated_interfaces }}"

