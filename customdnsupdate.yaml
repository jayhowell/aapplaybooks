---
- name: Reconcile CoreDNS hosts from KubeVirt VM IPs
  hosts: localhost
  gather_facts: false
  collections:
    - kubernetes.core

  vars:
    # ----- customize -----
    dns_namespace: "dns-helpers"          # where your CoreDNS ConfigMap lives
    coredns_cm_name: "coredns-custom"     # name of the ConfigMap
    dns_zone: "cusa.canon.com"            # zone to append
    vm_namespace: "test1"            # namespace with your VMs

    # Marker strings in Corefile
    begin_marker: "# BEGIN ANSIBLE-MANAGED HOSTS"
    end_marker: "# END ANSIBLE-MANAGED HOSTS"

  tasks:
    - name: Collect all VMIs (KubeVirt) from test1 namespace
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        namespace: "{{ vm_namespace }}"
      register: vmi_info

    - name: Initialize managed_hosts
      set_fact:
        managed_hosts: []

    - name: Collect VM names and IPs
      set_fact:
        managed_hosts: "{{ managed_hosts + [ { 'name': item.metadata.name, 'ip': item.status.interfaces[0].ipAddress } ] }}"
      loop: "{{ vmi_info.resources | default([]) }}"
      when:
        - item.status is defined
        - item.status.interfaces is defined
        - item.status.interfaces | length > 0
        - item.status.interfaces[0].ipAddress is defined

    - name: Render ANSIBLE-MANAGED block content (FQDN + short)
      vars:
        lines: |-
          {% for vm in managed_hosts | sort(attribute='name') -%}
          {% set short = vm.name.split('.')[0] %}
          {{ vm.ip }} {{ short }}.{{ dns_zone }} {{ short }}
          {% endfor -%}
      set_fact:
        managed_block: "{{ lines | trim }}"

    - name: Read existing CoreDNS ConfigMap
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ConfigMap
        name: "{{ coredns_cm_name }}"
        namespace: "{{ dns_namespace }}"
      register: cm_info

    - name: Fail if Corefile or markers not found
      vars:
        corefile: "{{ cm_info.resources[0].data.Corefile | default('') }}"
      when: >
        corefile == '' or
        (begin_marker not in corefile) or
        (end_marker not in corefile)
      fail:
        msg: >-
          Corefile missing or markers not present. Ensure your Corefile contains:
          '{{ begin_marker }}' and '{{ end_marker }}' inside the 'hosts { }' block.

    - name: Replace managed block between markers
      vars:
        corefile_in: "{{ cm_info.resources[0].data.Corefile }}"
        pattern: "(?s)({{ begin_marker | regex_escape }}).*?({{ end_marker | regex_escape }})"
        replacement: "\\1\n{{ managed_block }}\n\\2"
      set_fact:
        corefile_out: "{{ corefile_in | regex_replace(pattern, replacement) }}"

    - name: Update CoreDNS ConfigMap with new Corefile
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ coredns_cm_name }}"
            namespace: "{{ dns_namespace }}"
          data:
            Corefile: "{{ corefile_out }}"

    - name: Note on reload
      debug:
        msg: >-
          ConfigMap updated. CoreDNS should hot-reload (uses 'reload' plugin).
          If you don't see updates, check the CoreDNS pod logs or ensure 'reload' is enabled.
